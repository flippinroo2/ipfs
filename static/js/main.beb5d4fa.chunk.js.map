{"version":3,"sources":["../../../../source/state/actions/apiActions.ts","../../../../source/state/actions/loadingActions.ts","../../../../source/state/actions/polkadotActions.ts","../../../../source/state/actions/tableActions.ts","../../../../source/state/reducers/apiReducers.ts","../../../../source/state/reducers/loadingReducers.ts","../../../../source/state/reducers/polkadotReducers.ts","../../../../source/state/reducers/tableReducers.ts","../../../../source/state/reducers/index.ts","../../../source/state/store.ts","../../../source/components/Header.tsx","../../../source/components/Form.tsx","../../../source/components/Loader.tsx","../../../source/components/Table.tsx","../../../source/components/Footer.tsx","../../source/App.tsx","../../source/serviceWorker.ts","../../source/index.tsx"],"names":["dispatch","LOADING","SET_CURRENCY","GET_CURRENCY","SET_GENESIS_BLOCK","GET_GENESIS_BLOCK","SET_CURRENT_BLOCK","GET_CURRENT_BLOCK","SET_LAST_BLOCK","GET_LAST_BLOCK","SET_LAST_FINALIZED_BLOCK","GET_LAST_FINALIZED_BLOCK","SET_BLOCK_HASH","GET_BLOCK_HASH","SET_BLOCK_NUMBER","GET_BLOCK_NUMBER","ADD_COLUMNS","ADD_ROW","ADD_ROWS","CLEAR_TABLE","SET_COLUMNS","chain"],"mappings":"+3DAEM,EAAY,YACZ,EAAU,UACV,EAAU,UACV,EAAiB,iBACjB,EAAiB,iBACjB,EAAe,eACf,EAAe,eAOd,SAAS,IACd,OAAO,SAAC,GACN,EAAS,CACP,KAAM,KAKL,SAAS,EAAO,GACrB,OAAQ,YACN,OAfJ,SAA4B,GAC1B,IAAM,EAAW,IAAI,IAAW,GAChC,OAAO,IAAW,OAAO,CAAE,aAalB,CAAmB,GAAS,MACjC,SAAC,GACC,EAAS,CAAE,KAAM,EAAS,QAAS,OAErC,SAAC,GACCA,EAAS,CAAE,KAAM,EAAW,QAAS,QAMtC,IAAM,EAAgB,WAC3B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,MAKC,EAAgB,SAAC,GAC5B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,EAAc,WACzB,OAAQ,YACN,EAAS,CACP,KAAM,MAKC,EAAc,SAAC,GAC1B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,EAAe,CAC1B,YACA,UACA,UACA,iBACA,iBACA,eACA,gBC5EIC,EAAU,UAGH,EAAmB,WAC9B,OAAO,SAAC,GACN,EAAS,CACP,KAPqB,yBAYd,EAAmB,SAAC,GAC/B,OAAQ,YACN,EAAS,CACP,KAbqB,qBAcrB,cAKO,EAAa,WACxB,OAAQ,YACN,EAAS,CACP,KAAM,EACN,SAAS,MAKF,EAAY,WACvB,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,SAAS,MAKF,EAAe,CAC1B,mBAAoB,qBACpB,mBAAoB,qBACpB,QAAS,WC1CLC,EAAe,eACfC,EAAe,eACfC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAoB,oBACpB,EAAe,eACf,EAAe,eACfC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAmB,mBAEZ,EAAc,SAAC,GAC1B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,EAAc,SAAC,GAC1B,OAAQ,YACN,EAAS,CACP,KAAM,EACN,cAKO,GAAc,SAAC,GAC1B,OAAQ,YACN,EAAS,CACP,KAAM,EACN,cAKO,GAAc,SAAC,GAC1B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,GAAkB,SAAC,GAC9B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,GAAkB,SAAC,GAC9B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,GAAkB,SAAC,GAC9B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,GAAkB,SAAC,GAC9B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,GAAe,SAAC,GAC3B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,GAAe,SAAC,GAC3B,OAAQ,YACN,EAAS,CACP,KAAM,EACN,cAKO,GAAwB,SAAC,GACpC,OAAQ,YACN,EAAS,CACP,KAAM,EACN,cAKO,GAAwB,SAAC,GACpC,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,GAAe,SAAC,GAC3B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,GAAe,SAAC,GAC3B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,GAAiB,SAAC,GAC7B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,GAAiB,SAAC,GAC7B,OAAO,SAAC,GACN,EAAS,CACP,KAAM,EACN,cAKO,GAAe,CAC1B,eACA,eACA,oBACA,oBACA,oBACA,oBACA,eACA,eACA,iBACA,iBACA,2BACA,2BACA,iBACA,iBACA,mBACA,oBCjLIC,GAAc,aACdC,GAAU,UACVC,GAAW,WACXC,GAAc,cACdC,GAAc,cAEP,GAAa,SAAC,GACzB,OAAO,SAAC,GACN,EAAS,CACP,KAAM,GACN,cAKO,GAAa,SAAC,GACzB,OAAQ,YACN,EAAS,CACP,KAAM,GACN,cAKO,GAAS,SAAC,GACrB,OAAQ,YACN,EAAS,CACP,KAAM,GACN,cAKO,GAAU,SAAC,GACtB,OAAO,SAAC,GACN,EAAS,CACP,KAAM,GACN,cAKO,GAAa,WACxB,OAAO,SAAC,GACN,EAAS,CACP,KAAM,OAKC,GAAe,CAC1B,eACA,WACA,YACA,eACA,gBCrDF,GAQI,EAAW,aALb,IAHF,GACE,UADF,GAEE,QAFF,GAGE,SACA,GAJF,GAIE,eAEA,IANF,GAKE,eALF,GAME,cAuCa,IA7Cf,GAOE,aAsCa,CACb,IApCU,WAAgC,IAA/B,EAA+B,uDAAnB,GAAI,EAAe,uCAC1C,OAAQ,EAAO,OAKR,GACI,EAAO,QAEP,GA4BX,WAxBiB,WAA4C,IAA3C,EAA2C,uDAA3B,WAAY,EAAe,uCAC7D,OAAQ,EAAO,OAGP,GACG,EAAO,QAEP,GAkBX,SAde,WAAyD,IAAxD,EAAwD,uDAAxC,wBAAyB,EAAe,uCACxE,OAAQ,EAAO,OAGR,GACI,EAAO,QAEP,KCzCb,GACE,EAAe,aADW,IAA5B,GAAQ,mBAAR,GAA4B,SAAS,GAArC,GAAqC,mBAuBtB,IAAE,QApBD,WAAuC,IAAtC,IAAsC,yDAAf,EAAe,uCACrD,OAAQ,EAAO,OACP,GACG,EAAO,QAEP,GAea,cAXJ,WAAoC,IAAnC,EAAmC,uDAAnB,GAAI,EAAe,uCACxD,OAAQ,EAAO,OACR,GACI,EAAO,QAIP,ICnBb,GAiBI,EAAgB,aAgEL,IAjFf,GACE,aADF,GAEE,aAFF,GAGE,kBAHF,GAIE,kBAJF,GAKE,kBALF,GAME,kBANF,GAOE,aAPF,GAQE,aARF,GASE,eATF,GAUE,eAVF,GAWE,yBAXF,GAYE,yBAZF,GAaE,eAbF,GAcE,eAdF,GAeE,iBAfF,GAgBE,iBAiEa,CACb,MA/DY,WASV,IARD,EAQC,uDARqH,CACrH,SAAU,EACV,aAAc,EACd,UAAW,EACX,mBAAoB,EACpB,WAAY,GAEb,EACC,uCA2BE,OA1BI,EAAO,KA0BJ,GA4BX,SAxBe,WAAuC,IAAtC,EAAsC,uDAAtB,MAAO,EAAe,uCAOlD,OANI,EAAO,KAMJ,GAkBX,SAde,WAAqF,IAApF,EAAoF,uDAAtD,CAAE,SAAU,yBAA2B,EAAe,uCAOhG,OANI,EAAO,KAMJ,K,SC7Eb,GACE,EAAa,aADP,GAAR,GAAQ,YAAa,GAArB,GAAqB,QAAS,GAA9B,GAA8B,SAAU,GAAxC,GAAwC,YAAa,GAArD,GAAqD,YAehD,GAAO,EAkBG,IACb,QA9Bc,WAA8C,IAA7C,EAA6C,uDAAhC,CAAE,QAAS,IAAM,EAAe,uCAC5D,OAAQ,EAAO,MACb,KAAK,GACH,6BAAW,GAAX,aAAqB,EAAO,UAC9B,KAAK,GACH,OAAO,EAAO,QAChB,QACE,OAAO,IAwBX,KAlBW,WAA2C,IAA1C,EAA0C,uDAA7B,CAAE,KAAM,IAAM,EAAe,uCAC9C,EAAS,EAAT,KACR,OAAQ,EAAO,MACb,KAAK,GACH,IAAM,EAAG,YAAQ,IAEjB,OADA,EAAO,QAAQ,IAAM,EACd,CAAE,KAAI,uBAAM,GAAN,CAAY,EAAO,WAClC,KAAK,GACH,MAAO,CAAE,KAAI,uBAAM,GAAN,CAAY,EAAO,WAClC,KAAK,GACH,MAAO,CAAE,KAAM,IACjB,QACE,OAAO,KCxBP,GAAW,CACf,YAAa,YAAgB,IAC7B,gBAAiB,YAAgB,IACjC,iBAAkB,YAAgB,IAClC,cAAe,YAAgB,KAGlB,eAAgB,ICE/B,IAAM,GATA,WAA0C,IAAjB,EAAiB,uDAAF,GACtC,EAAQ,YACZ,GACA,EACA,YAAgB,MAElB,OAAO,EAGK,CAXO,IAaN,M,+EChBP,GAAU,KAAV,MAEF,GAAY,SAAC,GACjB,IAAS,EAAa,EAAd,UACA,EAAW,KAAX,OACR,OACE,eAAC,EAAD,CAAQ,UAAW,EAAnB,SACE,eAAC,GAAD,CAAO,MAAI,EAAX,2BAKN,GAAU,aAAe,CACvB,UAAW,eAGE,ICaT,GDbS,M,UEdP,GAAc,KAAd,UAED,G,oDACL,WAAY,GAAU,wCACd,G,2CAQR,WACE,IAAQ,EAAkB,KAAK,MAAvB,cACR,OACE,gBAAC,KAAD,WACE,eAAC,GAAD,CAAW,UAAU,eAArB,wBACA,eAAC,KAAD,CACE,QAAS,EACT,OAAe,iB,uCAZvB,SAAgC,GAE9B,MAAO,CAAE,cADiB,EAAlB,mB,GANS,a,IA6BN,aALS,SAAC,GAEvB,MAAO,CAAE,cADiB,EAAlB,iBAIK,CAAwC,I,6NDP9C,GAAuD,EAAxD,WAAY,GAA4C,EAA5C,OAAQ,GAAoC,EAApC,QAAS,GAA2B,EAA3B,WAAY,GAAe,EAAf,WACxC,GAA2C,EAA5C,UAAW,GAAiC,EAAjC,WAAY,GAAqB,EAArB,kBAE/B,SAAK,GACH,mCADF,CAAK,QAAW,K,IAIV,G,oDAKJ,WAAY,GAAU,4BACpB,cAAM,IA0PR,KACE,gBAAC,KAAD,CACE,QAAS,SAAC,KADZ,UAOE,eAAC,KAAK,KAAN,CAEE,QAAS,SAAC,GACR,EAAK,SAAS,CACZ,WAAY,YACZ,SAAU,oCAGd,KAAM,eAAC,KAAD,IARR,sBACM,KAUN,eAAC,KAAK,KAAN,CAEE,QAAS,SAAC,GACR,EAAK,SAAS,CACZ,WAAY,sBACZ,SAAU,sCAGd,KAAM,eAAC,KAAD,IARR,gCACM,KAUN,eAAC,KAAK,KAAN,CAEE,QAAS,SAAC,GACR,EAAK,SAAS,CACZ,WAAY,WACZ,SAAU,gCAGd,KAAM,eAAC,KAAD,IARR,qBACM,KAUN,eAAC,KAAK,KAAN,CAEE,QAAS,SAAC,GACR,EAAK,SAAS,CACZ,WAAY,UACZ,SAAU,oCAGd,KAAM,eAAC,KAAD,IARR,oBACM,KAUN,eAAC,KAAK,KAAN,CAEE,QAAS,SAAC,GACR,EAAK,SAAS,CACZ,WAAY,WACZ,SAAU,GAAY,YAG1B,KAAM,eAAC,KAAD,IARR,qBACM,KAUN,eAAC,KAAK,KAAN,CAEE,QAAS,SAAC,GACR,EAAK,SAAS,CACZ,WAAY,SACZ,SAAU,kCAGd,KAAM,eAAC,KAAD,IARR,mBACM,QAzTR,IAAO,EAAmC,IAAM,YAF5B,OAIpB,EAAK,UAAY,EAEjB,EAAK,cAAgB,EAAK,cAAc,KAAnB,iBACrB,EAAK,kBAAoB,EAAK,kBAAkB,KAAvB,iBACzB,EAAK,oBAAsB,EAAK,oBAAoB,KAAzB,iBARP,E,8FAsCtB,WAAuB,GAAvB,sG,2HAIA,WAAoB,GAApB,yEAEE,KAAK,MAAM,aAFb,SAGsB,KAAK,MAAM,aAHjC,kBAIkB,KAAK,MAAb,IACA,KALV,gCAMuB,KAAK,oBAN5B,8D,+HAUA,0GACM,EAAU,GAER,EAAiB,KAAK,UACtB,EAAO,EAAU,QAEjB,EAAa,SAAS,EAAK,cAAc,gBAAkB,EAC3D,EAAW,SAAS,EAAK,cAAc,cAAgB,EACvD,EAAkB,EAAW,EARrC,wBAYW,GAZX,8FAa4B,EAAK,kBAAkB,EAAa,GAbhE,cAaU,EAbV,gBAe8B,EAAK,kBAAkB,GAfrD,cAeU,EAfV,gBAgBkC,EAAK,eAAe,GAhBtD,QAgBU,EAhBV,QAkBoB,SAAQ,SAAC,EAAM,GAC7B,EAAK,MAAM,OAAO,MAGd,EAAY,GAClB,OAAO,KAAK,EAAgB,IAAI,SAAQ,SAAC,GACvC,OAAQ,GACN,IAAK,YACL,IAAK,MACH,OACF,QACE,EAAK,KAAK,CACR,MAAK,UAAK,EAAI,qBACd,UAAS,UAAK,GACd,IAAG,UAAK,SAIhB,EAAU,EApCd,2CAYW,EAAI,EAZf,YAYkB,GAAK,GAZvB,0CAYW,GAZX,iBAYwC,IAZxC,uBA0CE,KAAK,MAAM,WAAW,GACtB,KAAK,MAAM,iBAAiB,KAC5B,KAAK,MAAM,YA5Cb,iD,yHA+CA,WAAmB,GAAnB,gGACqB,KAAK,kBAAkB,GAD5C,cACQ,EADR,gBAE0B,KAAK,iBAAiB,GAFhD,uBAEU,EAFV,EAEU,MAFV,SAGuB,KAAK,kBAAkB,GAH9C,cAGQ,EAHR,iBAIqB,KAAK,gBAAgB,GAJ1C,eAIQ,EAJR,yBAKS,CACL,QACA,OACA,SACA,SATJ,iD,8HAaA,WAAuB,GAAvB,mFACU,EAAQ,KAAK,MAAb,KACA,KAFV,uBAGY,EAAQ,EAAR,IACA,EAAU,EAAV,MAJZ,SAK6B,EAAK,SAAS,GAL3C,cAKU,EALV,OAMiB,EAAU,MAAM,SANjC,kBAOW,GAPX,gCASS,GATT,iD,oIAYA,WAA6B,GAA7B,mFACU,EAAQ,KAAK,MAAb,KACA,KAFV,uBAGY,EAAQ,EAAR,IACA,EAAU,EAAV,MAJZ,SAK4B,EAAM,UAAU,GAL5C,cAKU,EALV,yBAMW,GANX,gCAQS,GART,gD,oIAWA,WAA6B,GAA7B,mFACU,EAAQ,KAAK,MAAb,KACA,KAFV,uBAGY,EAAQ,EAAR,IACA,EAAU,EAAV,MAJZ,SAK4BC,EAAM,SAAS,GAL3C,cAKU,EALV,yBAMW,SAAS,EAAU,MAAM,OAAO,OAAO,aANlD,gCAQS,GART,gD,+HAWA,WAAwB,GAAxB,mFACU,EAAQ,KAAK,MAAb,KACA,KAFV,uBAGY,EAAQ,EAAR,IACA,EAAU,EAAV,MAJZ,SAK4B,EAAM,aAAa,GAL/C,cAKU,EALV,yBAMW,GANX,gCAQS,GART,gD,+HAWA,WAAwB,GAAxB,qFACU,EAAQ,KAAK,MAAb,KACA,KAFV,uBAGY,EAAU,EAAV,MACA,EAAW,EAAX,OACA,EAAW,EAAX,OALZ,SAMwB,EAAO,GAAG,GANlC,cAMU,EANV,yBAOW,GAPX,gCASS,IATT,iD,4HAYA,WAAqB,GAArB,mHACQ,EAAY,GACZ,EAAO,EAAO,cAFtB,SAG4B,KAAK,uBAAuB,GAHxD,cAGQ,EAHR,gBAI4B,KAAK,uBAAuB,GAJxD,cAIQ,EAJR,iBAK0B,KAAK,gBAAgB,GAL/C,eAMQ,EAAqD,CACzD,cACA,OAAQ,IARZ,eAUqB,GAVrB,kEAUa,EAVb,UAWmD,EAAK,IAAI,SAAhD,EAXZ,EAWY,KAXZ,EAWkB,MAAO,EAXzB,EAWyB,KAAM,EAX/B,EAW+B,OAAQ,EAXvC,EAWuC,QAC3B,EAAU,EAAV,MAZZ,EAauB,EAAK,UAb5B,oBAaW,EAbX,KAcqB,EAAK,KACgC,EAA9C,KAA8C,EAAxC,KAAwC,EAAlC,QAAkC,EAAzB,KAAyB,EAAnB,SAAmB,EAAT,KAfjD,eAgBsB,EAAM,iBAAiB,MAhB7C,GAgBW,EAhBX,eAiByB,EAAY,OAjBrC,eAkBI,EAAY,OAAO,KAAK,CAGtB,QAAO,UAAK,EAAL,YAAoB,GAC3B,MAAK,UAAK,EAAL,YAAgB,GACrB,UAAW,CAAC,EAAS,MAAO,EAAS,QAAS,EAAS,UAvB7D,wJA0BE,EAAU,KAAK,GA1BjB,kBA2BS,GA3BT,iE,6HA8BA,WAAsB,GAAtB,qGAGiD,KAAK,MAA5C,EAHV,EAGU,IAHV,EAGe,UAHf,EAG0B,oBACpB,EAAI,KAJV,wBAKwB,EAAI,OAAO,MACzB,EAAW,EAAI,IAAI,MAN7B,SAQ4B,EAAS,SAAS,GAR9C,yBAQY,MAEF,EAAY,EAAI,MAAM,UAVhC,UAWsC,EAAU,MAXhD,eAWU,EAXV,sBAawC,EAAoB,MAb5D,GAaW,EAbX,KAc2B,IAAI,KAAK,GAE1B,EAAmB,IAAI,KAGvB,EAAQ,EAAc,EACtB,EAAQ,EAA4B,EACpC,EACJ,EACA,EAAoB,MAAM,GAAK,EAAoB,MAAM,GAErD,EAAQ,IAAI,KAAK,GACT,IAAI,KAAK,GACT,IAAI,KAAK,GA3B3B,kBA6BW,GA7BX,iD,+HAiCA,yGACU,EAAQ,KAAK,MAAb,IACA,EAAgB,EAAhB,OAAQ,EAAQ,EAAR,IAFlB,SAGsB,EAAI,MAAM,WAHhC,OAGQ,EAHR,OAIiB,EAAM,MAAM,OAC3B,EAAO,MAAM,mBAAkB,SAAC,GACR,EAAK,MAAnB,WAEN,QAAQ,IAAR,uBACkB,EAAO,OADzB,2BACkD,EAAO,YAT/D,gD,uFAeA,WACE,KAAK,SAAS,CAAE,WAAW,M,oBAgF7B,WACE,MACE,KAAK,MADC,EAAR,EAAQ,SAAU,EAAlB,EAAkB,SAAU,EAA5B,EAA4B,UAAW,EAAvC,EAAuC,QAKjC,EAAoB,CACxB,WACA,WAPF,EAAgD,WAQ9C,SAAU,GAAsB,GAG5B,EAAY,CAChB,KAAM,iBACN,IAAK,KAAK,UACV,cAAe,EACf,OAAO,EACP,oBAAoB,EACpB,SAAU,CAAE,KAAM,GAClB,WAAY,CAAE,KAAM,KAIf,EAAU,CAIf,MAAM,GAGF,EAAc,CAAE,GAAI,GAAI,GAAI,IAElC,OACE,gBAAC,KAAD,2BAAM,UAAU,mBAAsB,GAAtC,cACE,eAAC,KAAD,CAAS,YAAY,OAArB,6BAIA,gBAAC,KAAD,2BAAK,MAAM,SAAS,QAAQ,UAAa,GAAzC,cACE,eAAC,KAAD,6BAAS,GAAT,IAAsB,GAAI,EAAG,GAAI,EAAG,GAAI,EAAxC,SACE,eAAC,KAAD,CAAU,QAAS,KAAK,KAAxB,SACE,gBAAC,KAAD,WArCkB,WAqClB,IACwB,eAAC,KAAD,YAI5B,eAAC,KAAD,6BAAS,GAAT,IAAsB,GAAI,GAAI,GAAI,GAAI,GAAI,GAA1C,SACE,eAAC,KAAK,KAAN,CACE,MAAM,WACN,KAAK,WACL,QAAS,0BACT,MAAO,CACL,CACE,UAAU,EACV,QACE,6EAGN,UAAU,EAXZ,SAYE,eAAC,KAAD,aAIN,eAAC,KAAD,CAAS,YAAY,OAArB,oBACA,gBAAC,KAAD,2BAAK,MAAM,SAAS,QAAQ,UAAa,GAAzC,cACE,eAAC,KAAD,6BAAS,GAAT,IAAsB,GAAI,GAAI,GAAI,GAAlC,SACE,eAAC,KAAK,KAAN,CACE,MAAM,cACN,KAAK,aACL,QAAS,wBACT,aAAa,EACb,WAAW,OACX,UAAU,EACV,MAAO,CACL,CACE,UAAU,EACV,QAAO,oCAET,CACE,KAAM,SACN,IAAK,EACL,IAAK,OAAO,iBACZ,QACE,6FAEJ,gBACE,EADF,EACE,eADF,MAEO,CACL,UADK,SACK,EAAM,GACd,MAAiC,IACjC,OADA,EAAQ,WAAR,EAAoB,SAEX,QAAQ,UAEV,QAAQ,OACb,IAAI,MAAM,iDAKlB,QAAQ,WACR,UAAU,EAlCZ,SAmCE,eAAC,KAAD,CACE,IAAK,EACL,IAAK,OAAO,iBACZ,MAAO,CAAE,MAAO,eAItB,eAAC,KAAD,6BACM,GADN,IAEE,GAAI,CAAE,OAAQ,EAAG,KAAM,IACvB,GAAI,CAAE,OAAQ,EAAG,KAAM,IAHzB,SAIE,eAAC,KAAK,KAAN,CACE,MAAM,YACN,WAAW,OACX,KAAK,WACL,QAAS,qBACT,aAAa,EACb,UAAU,EACV,eAAe,EACf,MAAO,CACL,CACE,KAAM,SACN,IAAK,EACL,IAAK,OAAO,iBACZ,QACE,6FAEJ,CACE,UAAU,EACV,QAAO,kCAET,gBACE,EADF,EACE,eADF,MAEO,CACL,UADK,SACK,EAAM,GACd,MAAiC,IAAzB,EAAR,EAAQ,WACR,OADA,EAAoB,SACL,EACN,QAAQ,UAEV,QAAQ,OACb,IAAI,MAAM,oDAKlB,QAAQ,WACR,UAAU,EAnCZ,SAoCE,eAAC,KAAD,CACE,IAAK,EACL,IAAK,OAAO,iBACZ,MAAO,CAAE,MAAO,mBAKxB,eAAC,KAAD,CAAS,YAAY,OAArB,qBACA,eAAC,KAAD,2BAAK,MAAM,UAAa,GAAxB,aACE,eAAC,KAAD,6BAAS,GAAT,IAAsB,GAAI,CAAE,OAAQ,EAAG,KAAM,IAAM,GAAI,CAAE,OAAQ,EAAG,KAAM,IAAM,GAAI,EAApF,SACE,eAAC,KAAD,CACE,UAAU,cACV,KAAK,UACL,SAAS,SACT,QAAS,KAAK,cACd,OAAO,EACP,SAAU,EANZ,+B,uCA5dV,SAAgC,GAa9B,MAAO,CACL,IAFE,EAVF,IAaA,WAHE,EATF,WAaA,SAJE,EARF,SAaA,SALE,EAPF,SAaA,aANE,EANF,aAaA,UAPE,EALF,UAaA,mBARE,EAJF,mBAaA,QATE,EAHF,QAaA,cAVE,EAFF,cAaA,WAXE,EADF,gB,GA3BkB,aA4iBT,gBAhDS,SAAC,GACvB,IAAQ,EAAmD,EAAnD,YAAa,EAAsC,EAAtC,gBAAiB,EAAqB,EAArB,iBAC9B,EAA8B,EAA9B,IAAK,EAAyB,EAAzB,WAAY,EAAa,EAAb,SACjB,EAA2B,EAA3B,QAAS,EAAkB,EAAlB,cACT,EAAU,EAAV,MACR,MAAO,CACL,MACA,aACA,SAAU,EAAM,SAChB,WACA,aAAc,EAAM,aACpB,UAAW,EAAM,UACjB,mBAAoB,EAAM,mBAC1B,UACA,gBACA,WAAY,EAAM,eAIK,SAAC,GAC1B,MAAO,CACL,WAAY,SAAC,GACX,EAAS,GAAW,KAEtB,OAAQ,SAAC,GACP,EAAS,GAAO,KAElB,QAAS,SAAC,GACR,EAAS,GAAQ,KAEnB,WAAY,WACV,EAAS,OAEX,WAAY,SAAC,GACX,EAAS,GAAW,KAEtB,UAAW,WACT,EAAS,OAEX,WAAY,WACV,EAAS,OAEX,iBAAkB,SAAC,GACjB,EAAS,GAAiB,QAKjB,CAA4D,I,8BErkBnE,GAA4C,EAA5C,UAAW,GAAiC,EAAjC,WAAY,GAAqB,EAArB,iBAEzB,G,oDACJ,WAAY,GAAU,mCACpB,cAAM,IAqBR,oBAAsB,SAAC,GAgBrB,OAfA,EAAM,KAAI,SAAC,GAaT,MAZgB,SAAZ,EAAK,MACP,EAAK,QAAU,CACb,CACE,KAAI,0BACJ,MAAO,4BAGX,EAAK,SAAW,SAAC,EAAe,GAE9B,OADwB,EAAO,OAAS,IAIpC,KAEF,GApCR,EAAK,cAAgB,EAAK,cAAc,KAAnB,iBACrB,EAAK,oBAAsB,EAAK,oBAAoB,KAAzB,iBAHP,E,sDAiBtB,WACE,KAAK,MAAM,iBAAiB,KAC5B,KAAK,MAAM,c,2BAsBb,WACE,MAAyC,KAAK,MAAtC,EAAR,EAAQ,QAAwB,GAAhC,EAAiB,cAAjB,EAAgC,MAczB,EAAkB,KAAK,oBAAoB,CAChD,CACE,MAAO,WACP,UAAW,UACX,IAAK,WAEP,CACE,MAAO,QACP,UAAW,QACX,IAAK,SAEP,CACE,MAAO,aACP,UAAW,YACX,IAAK,YACL,OAAQ,SAAC,EAAW,EAAa,GAC/B,IAAO,EAAM,EAAO,UAAU,KAAI,SAAC,GACjC,OAAO,8BAAK,OAEd,OAAO,8BAAK,QAKlB,OACE,eAAC,KAAD,CACE,UAAU,mBACV,QAvCgB,CAClB,CACE,MAAO,eACP,UAAW,cACX,IAAK,cACL,OAAQ,SAAC,EAAQ,GACf,OAAO,EAAE,YAAc,EAAE,eAkC3B,WAAY,EACZ,WAAY,CACV,mBAAoB,WACpB,kBAAmB,SAAC,EAAQ,GAC1B,OACE,eAAC,KAAD,CAEE,QAAS,EACT,WAAY,EAAO,OACnB,YAAY,GAHP,IAOX,WAAY,YAAmC,IAAhC,EAAgC,EAAhC,SAAU,EAAsB,EAAtB,SAAU,EAAY,EAAZ,OACjC,OAAI,EACK,eAAC,KAAD,CAAgB,QAAS,SAAC,GAAD,OAAO,EAAS,EAAQ,MAEnD,eAAC,KAAD,CAAkB,QAAS,SAAC,GAAD,OAAO,EAAS,EAAQ,OAE5D,kBAAkB,EAClB,cAAe,SAAC,GACd,QAAI,EAAO,SAMf,QAAS,CAAE,SAAU,O,oBAQ3B,WAEE,OADc,KAAK,mB,uCAlHrB,SAAgC,GAC9B,IAAQ,EAA+C,EAA/C,IAAK,EAA0C,EAA1C,QAAS,EAAiC,EAAjC,cAAe,EAAkB,EAAlB,QAAS,EAAS,EAAT,KAC9C,MAAO,CACL,MACA,QAAS,EAAQ,QACjB,UACA,gBACA,KAAM,EAAK,U,GAdS,aAuJX,gBAzBS,SAAC,GACvB,IAAQ,EAAkE,EAAlE,YAAa,EAAqD,EAArD,gBAAiB,EAAoC,EAApC,cAAoC,EAArB,iBACrD,MAAO,CACL,IAAK,EAAY,IACjB,QAAS,EAAc,QACvB,QAAS,EAAgB,QACzB,eAAgB,EAAgB,eAChC,KAAM,EAAc,SAIG,SAAC,GAC1B,MAAO,CACL,UAAW,WACT,EAAS,OAEX,WAAY,WACV,EAAS,OAEX,iBAAkB,SAAC,GACjB,EAAS,GAAiB,QAKjB,CAA4D,ICjKnE,GAAS,KAAT,KAEF,GAAY,SAAC,GACjB,IAAQ,EAAc,EAAd,UACC,EAAU,KAAX,OACF,GAAO,IAAI,MAAO,cACxB,OACE,eAAC,EAAD,CAAQ,UAAW,EAAnB,SACE,gBAAC,GAAD,4CAAkC,EAAlC,8BAKN,GAAU,aAAe,CACvB,UAAW,eAGE,UCCP,GAAW,EAAX,OACA,GAAgC,EAAhC,UAAW,GAAqB,EAArB,iBAEV,GAAW,KAAZ,QAKD,G,oDACL,WAAY,GAAY,wCAChB,G,sDAgBR,WACE,KAAK,MAAM,OAAO,KAAK,MAAM,UAC7B,KAAK,MAAM,iBAAiB,M,oBAG9B,WAIE,OACE,gBAAC,KAAD,CAAQ,UAAU,cAAc,MAFf,CAAE,UAAW,SAE9B,UACE,eAAC,GAAD,IACA,eAAC,GAAD,UAII,uCACE,eAAC,GAAD,IACA,eAAC,GAAD,SAIN,eAAC,GAAD,U,uCAnCN,SAAgC,GAG9B,MAAO,CACL,IAFA,EADM,IAIN,WAHA,EADW,WAKX,SAJA,EADuB,SAMvB,QALA,EADiC,QAOjC,cANA,EAD0C,cAQ1C,SAPA,EADyD,c,GAN7C,aA4EH,gBA9BS,SAAC,GACvB,IAAQ,EAAmD,EAAnD,YAAa,EAAsC,EAAtC,gBAAiB,EAAqB,EAArB,iBAItC,MAAO,CACL,IAJoC,EAA9B,IAKN,WALoC,EAAzB,WAMX,SANoC,EAAb,SAOvB,QANiC,EAA3B,QAON,cAPiC,EAAlB,cAQf,SAPmB,EAAb,aAYiB,SAAC,GAC1B,MAAO,CACL,OAAQ,SAAC,GACP,EAAS,GAAO,KAElB,UAAW,WACT,EAAS,OAEX,iBAAkB,SAAC,GACjB,EAAS,GAAiB,QAKjB,CAAuE,IC3FlE,QACW,cAA7B,OAAO,SAAS,UAEa,UAA7B,OAAO,SAAS,UAEhB,OAAO,SAAS,SAAS,MACvB,2DCRJ,IAAS,OACP,eAAC,IAAM,WAAP,UACE,eAAC,IAAD,CAAU,MAAO,GAAjB,SAIE,eAAC,GAAD,QAGJ,SAAS,eAAe,SDiHpB,kBAAmB,WACrB,UAAU,cAAc,MAAM,MAAK,SAAC,GAClC,EAAa,kB","file":"static/js/main.beb5d4fa.chunk.js","sourcesContent":["import { ApiPromise, WsProvider } from '@polkadot/api';\nconst API_ERROR = 'API_ERROR';\nconst GET_API = 'GET_API';\nconst SET_API = 'SET_API';\nconst SET_BLOCKCHAIN = 'SET_BLOCKCHAIN';\nconst GET_BLOCKCHAIN = 'GET_BLOCKCHAIN';\nconst SET_ENDPOINT = 'SET_ENDPOINT';\nconst GET_ENDPOINT = 'GET_ENDPOINT';\nfunction initializeProvider(endpoint) {\n    const provider = new WsProvider(endpoint);\n    return ApiPromise.create({ provider });\n}\nexport function getApi() {\n    return (dispatch) => {\n        dispatch({\n            type: GET_API,\n        });\n    };\n}\nexport function setApi(payload) {\n    return (dispatch) => {\n        return initializeProvider(payload).then((api) => {\n            dispatch({ type: SET_API, payload: api });\n        }, (error) => {\n            dispatch({ type: API_ERROR, payload: error });\n        });\n    };\n}\nexport const getBlockchain = () => {\n    return (dispatch) => {\n        dispatch({\n            type: GET_BLOCKCHAIN,\n        });\n    };\n};\nexport const setBlockchain = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_BLOCKCHAIN,\n            payload,\n        });\n    };\n};\nexport const getEndpoint = () => {\n    return (dispatch) => {\n        dispatch({\n            type: GET_ENDPOINT,\n        });\n    };\n};\nexport const setEndpoint = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_ENDPOINT,\n            payload,\n        });\n    };\n};\nexport const ACTION_TYPES = {\n    API_ERROR,\n    GET_API,\n    SET_API,\n    SET_BLOCKCHAIN,\n    GET_BLOCKCHAIN,\n    SET_ENDPOINT,\n    GET_ENDPOINT,\n};\n//# sourceMappingURL=apiActions.js.map","const GET_PERCENT_LOADED = 'GET_PERCENT_LOADED';\nconst LOADING = 'LOADING';\nconst SET_PERCENT_LOADED = 'SET_PERCENT_LOADED';\nexport const getPercentLoaded = () => {\n    return (dispatch) => {\n        dispatch({\n            type: GET_PERCENT_LOADED,\n        });\n    };\n};\nexport const setPercentLoaded = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_PERCENT_LOADED,\n            payload,\n        });\n    };\n};\nexport const setLoading = () => {\n    return (dispatch) => {\n        dispatch({\n            type: LOADING,\n            payload: true,\n        });\n    };\n};\nexport const setLoaded = () => {\n    return (dispatch) => {\n        dispatch({\n            type: LOADING,\n            payload: false,\n        });\n    };\n};\nexport const ACTION_TYPES = {\n    GET_PERCENT_LOADED: 'GET_PERCENT_LOADED',\n    SET_PERCENT_LOADED: 'SET_PERCENT_LOADED',\n    LOADING: 'LOADING',\n};\n//# sourceMappingURL=loadingActions.js.map","const SET_CURRENCY = 'SET_CURRENCY';\nconst GET_CURRENCY = 'GET_CURRENCY';\nconst SET_GENESIS_BLOCK = 'SET_GENESIS_BLOCK';\nconst GET_GENESIS_BLOCK = 'GET_GENESIS_BLOCK';\nconst SET_CURRENT_BLOCK = 'SET_CURRENT_BLOCK';\nconst GET_CURRENT_BLOCK = 'GET_CURRENT_BLOCK';\nconst SET_ENDPOINT = 'SET_ENDPOINT';\nconst GET_ENDPOINT = 'GET_ENDPOINT';\nconst SET_LAST_BLOCK = 'SET_LAST_BLOCK';\nconst GET_LAST_BLOCK = 'GET_LAST_BLOCK';\nconst SET_LAST_FINALIZED_BLOCK = 'SET_LAST_FINALIZED_BLOCK';\nconst GET_LAST_FINALIZED_BLOCK = 'GET_LAST_FINALIZED_BLOCK';\nconst SET_BLOCK_HASH = 'SET_BLOCK_HASH';\nconst GET_BLOCK_HASH = 'GET_BLOCK_HASH';\nconst SET_BLOCK_NUMBER = 'SET_BLOCK_NUMBER';\nconst GET_BLOCK_NUMBER = 'GET_BLOCK_NUMBER';\nexport const setCurrency = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_CURRENCY,\n            payload,\n        });\n    };\n};\nexport const getCurrency = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: GET_CURRENCY,\n            payload,\n        });\n    };\n};\nexport const getEndpoint = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_ENDPOINT,\n            payload,\n        });\n    };\n};\nexport const setEndpoint = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: GET_ENDPOINT,\n            payload,\n        });\n    };\n};\nexport const setGenesisBlock = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_GENESIS_BLOCK,\n            payload,\n        });\n    };\n};\nexport const getGenesisBlock = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: GET_GENESIS_BLOCK,\n            payload,\n        });\n    };\n};\nexport const setCurrentBlock = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_CURRENT_BLOCK,\n            payload,\n        });\n    };\n};\nexport const getCurrentBlock = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: GET_CURRENT_BLOCK,\n            payload,\n        });\n    };\n};\nexport const setLastBlock = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_LAST_BLOCK,\n            payload,\n        });\n    };\n};\nexport const getLastBlock = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: GET_LAST_BLOCK,\n            payload,\n        });\n    };\n};\nexport const setLastFinalizedBlock = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_LAST_FINALIZED_BLOCK,\n            payload,\n        });\n    };\n};\nexport const getLastFinalizedBlock = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: GET_LAST_FINALIZED_BLOCK,\n            payload,\n        });\n    };\n};\nexport const setBlockHash = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_BLOCK_HASH,\n            payload,\n        });\n    };\n};\nexport const getBlockHash = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: GET_BLOCK_HASH,\n            payload,\n        });\n    };\n};\nexport const setBlockNumber = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_BLOCK_NUMBER,\n            payload,\n        });\n    };\n};\nexport const getBlockNumber = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: GET_BLOCK_NUMBER,\n            payload,\n        });\n    };\n};\nexport const ACTION_TYPES = {\n    SET_CURRENCY,\n    GET_CURRENCY,\n    SET_GENESIS_BLOCK,\n    GET_GENESIS_BLOCK,\n    SET_CURRENT_BLOCK,\n    GET_CURRENT_BLOCK,\n    SET_ENDPOINT,\n    GET_ENDPOINT,\n    SET_LAST_BLOCK,\n    GET_LAST_BLOCK,\n    SET_LAST_FINALIZED_BLOCK,\n    GET_LAST_FINALIZED_BLOCK,\n    SET_BLOCK_HASH,\n    GET_BLOCK_HASH,\n    SET_BLOCK_NUMBER,\n    GET_BLOCK_NUMBER,\n};\n//# sourceMappingURL=polkadotActions.js.map","const ADD_COLUMNS = 'ADD_COLUMN';\nconst ADD_ROW = 'ADD_ROW';\nconst ADD_ROWS = 'ADD_ROWS';\nconst CLEAR_TABLE = 'CLEAR_TABLE';\nconst SET_COLUMNS = 'SET_COLUMNS';\nexport const addColumns = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: ADD_COLUMNS,\n            payload,\n        });\n    };\n};\nexport const setColumns = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_COLUMNS,\n            payload,\n        });\n    };\n};\nexport const addRow = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: ADD_ROW,\n            payload,\n        });\n    };\n};\nexport const addRows = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: ADD_ROWS,\n            payload,\n        });\n    };\n};\nexport const clearTable = () => {\n    return (dispatch) => {\n        dispatch({\n            type: CLEAR_TABLE,\n        });\n    };\n};\nexport const ACTION_TYPES = {\n    ADD_COLUMNS,\n    ADD_ROW,\n    ADD_ROWS,\n    CLEAR_TABLE,\n    SET_COLUMNS,\n};\n//# sourceMappingURL=tableActions.js.map","import { apiActions } from '../actions';\nconst { API_ERROR, GET_API, SET_API, SET_BLOCKCHAIN, GET_BLOCKCHAIN, SET_ENDPOINT, GET_ENDPOINT, } = apiActions.ACTION_TYPES;\nconst api = (state = {}, action) => {\n    switch (action.type) {\n        case API_ERROR:\n            return state;\n        case GET_API:\n            return state;\n        case SET_API:\n            return action.payload;\n        default:\n            return state;\n    }\n};\nconst blockchain = (state = 'Polkadot', action) => {\n    switch (action.type) {\n        case GET_BLOCKCHAIN:\n            return state;\n        case SET_BLOCKCHAIN:\n            return action.payload;\n        default:\n            return state;\n    }\n};\nconst endpoint = (state = 'wss://rpc.polkadot.io', action) => {\n    switch (action.type) {\n        case GET_ENDPOINT:\n            return state;\n        case SET_ENDPOINT:\n            return action.payload;\n        default:\n            return state;\n    }\n};\nexport default {\n    api,\n    blockchain,\n    endpoint,\n};\n//# sourceMappingURL=apiReducers.js.map","import { loadingActions } from '../actions';\nconst { GET_PERCENT_LOADED, LOADING, SET_PERCENT_LOADED } = loadingActions.ACTION_TYPES;\nconst loading = (state = true, action) => {\n    switch (action.type) {\n        case LOADING:\n            return action.payload;\n        default:\n            return state;\n    }\n};\nconst percentLoaded = (state = 25, action) => {\n    switch (action.type) {\n        case SET_PERCENT_LOADED:\n            return action.payload;\n        case GET_PERCENT_LOADED:\n            return state;\n        default:\n            return state;\n    }\n};\nexport default { loading, percentLoaded };\n//# sourceMappingURL=loadingReducers.js.map","import { polkadotActions } from '../actions';\nconst { SET_CURRENCY, GET_CURRENCY, SET_GENESIS_BLOCK, GET_GENESIS_BLOCK, SET_CURRENT_BLOCK, GET_CURRENT_BLOCK, SET_ENDPOINT, GET_ENDPOINT, SET_LAST_BLOCK, GET_LAST_BLOCK, SET_LAST_FINALIZED_BLOCK, GET_LAST_FINALIZED_BLOCK, SET_BLOCK_HASH, GET_BLOCK_HASH, SET_BLOCK_NUMBER, GET_BLOCK_NUMBER, } = polkadotActions.ACTION_TYPES;\nconst block = (state = {\n    endBlock: 2,\n    genesisBlock: 0,\n    lastBlock: 0,\n    lastFinalizedBlock: 0,\n    startBlock: 1,\n}, action) => {\n    switch (action.type) {\n        case SET_GENESIS_BLOCK:\n            return state;\n        case GET_GENESIS_BLOCK:\n            return state;\n        case SET_CURRENT_BLOCK:\n            return state;\n        case GET_CURRENT_BLOCK:\n            return state;\n        case SET_BLOCK_HASH:\n            return state;\n        case GET_BLOCK_HASH:\n            return state;\n        case SET_LAST_BLOCK:\n            return state;\n        case GET_LAST_BLOCK:\n            return state;\n        case SET_LAST_FINALIZED_BLOCK:\n            return state;\n        case GET_LAST_FINALIZED_BLOCK:\n            return state;\n        case SET_BLOCK_NUMBER:\n            return state;\n        case GET_BLOCK_NUMBER:\n            return state;\n        default:\n            return state;\n    }\n};\nconst currency = (state = 'DOT', action) => {\n    switch (action.type) {\n        case SET_CURRENCY:\n            return state;\n        case GET_CURRENCY:\n            return state;\n        default:\n            return state;\n    }\n};\nconst endpoint = (state = { endpoint: 'wss://rpc.polkadot.io' }, action) => {\n    switch (action.type) {\n        case SET_ENDPOINT:\n            return state;\n        case GET_ENDPOINT:\n            return state;\n        default:\n            return state;\n    }\n};\nexport default {\n    block,\n    currency,\n    endpoint,\n};\n//# sourceMappingURL=polkadotReducers.js.map","import { tableActions } from '../actions';\nconst { ADD_COLUMNS, ADD_ROW, ADD_ROWS, CLEAR_TABLE, SET_COLUMNS } = tableActions.ACTION_TYPES;\nconst columns = (state = { columns: [] }, action) => {\n    switch (action.type) {\n        case ADD_COLUMNS:\n            return [...state, ...action.payload];\n        case SET_COLUMNS:\n            return action.payload;\n        default:\n            return state;\n    }\n};\nlet rowId = 0;\nconst rows = (state = { rows: [] }, action) => {\n    const { rows } = state;\n    switch (action.type) {\n        case ADD_ROW:\n            const key = `${++rowId}`;\n            action.payload.key = key;\n            return { rows: [...rows, action.payload] };\n        case ADD_ROWS:\n            return { rows: [...rows, action.payload] };\n        case CLEAR_TABLE:\n            return { rows: [] };\n        default:\n            return state;\n    }\n};\nexport default {\n    columns,\n    rows,\n};\n//# sourceMappingURL=tableReducers.js.map","import { combineReducers } from 'redux';\nimport apiReducers from './apiReducers';\nimport loadingReducers from './loadingReducers';\nimport polkadotReducers from './polkadotReducers';\nimport tableReducers from './tableReducers';\nconst reducers = {\n    apiReducers: combineReducers(apiReducers),\n    loadingReducers: combineReducers(loadingReducers),\n    polkadotReducers: combineReducers(polkadotReducers),\n    tableReducers: combineReducers(tableReducers),\n};\nexport default combineReducers(reducers);\n//# sourceMappingURL=index.js.map","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport combinedReducers from './reducers';\nconst initialState = {};\nexport function configureStore(initialState = {}) {\n    const store = createStore(combinedReducers, initialState, applyMiddleware(thunk));\n    return store;\n}\nconst store = configureStore(initialState);\nexport default store;\n//# sourceMappingURL=store.js.map","import { Layout, Typography } from 'antd';\nconst { Title } = Typography;\nconst AppHeader = (props) => {\n    const { className } = props;\n    const { Header } = Layout;\n    return (<Header className={className}>\n      <Title code>Kevin Scan</Title>\n    </Header>);\n};\nAppHeader.defaultProps = {\n    className: 'site_header',\n};\nexport default AppHeader;\n//# sourceMappingURL=Header.jsx.map","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { tableActions, loadingActions } from '../state/actions';\nimport { Button, Col, Divider, Dropdown, Form, Input, InputNumber, Menu, Row, } from 'antd';\nimport { CaretDownOutlined, BankTwoTone, CompassTwoTone, HeartTwoTone, RocketTwoTone, SettingTwoTone, ThunderboltTwoTone, } from '@ant-design/icons';\nconst { addColumns, addRow, addRows, clearTable, setColumns } = tableActions;\nconst { setLoaded, setLoading, setPercentLoaded } = loadingActions;\nvar Blockchains;\n(function (Blockchains) {\n    Blockchains[\"Polkadot\"] = \"wss://rpc.polkadot.io\";\n})(Blockchains || (Blockchains = {}));\nclass DataInput extends Component {\n    inputForm;\n    constructor(props) {\n        super(props);\n        const inputForm = React.createRef();\n        this.inputForm = inputForm;\n        this.clickListener = this.clickListener.bind(this);\n        this.subscribeToBlocks = this.subscribeToBlocks.bind(this);\n        this.unsubscribeToBlocks = this.unsubscribeToBlocks.bind(this);\n    }\n    static getDerivedStateFromProps(props) {\n        const { api, blockchain, endBlock, endpoint, genesisBlock, lastBlock, lastFinalizedBlock, loading, percentLoaded, startBlock, } = props;\n        return {\n            api,\n            blockchain,\n            endBlock,\n            endpoint,\n            genesisBlock,\n            lastBlock,\n            lastFinalizedBlock,\n            loading,\n            percentLoaded,\n            startBlock,\n        };\n    }\n    async dropdownListener(event) {\n    }\n    async clickListener(event) {\n        this.props.setLoading();\n        const clear = await this.props.clearTable();\n        const { api } = this.state;\n        if (api.type) {\n            const test = await this.buildTableObjects();\n        }\n    }\n    async buildTableObjects() {\n        let columns = [];\n        const inputForm = this.inputForm;\n        const form = inputForm.current;\n        const startBlock = parseInt(form.getFieldValue('startBlock')) || 0;\n        const endBlock = parseInt(form.getFieldValue('endBlock')) || 0;\n        const blockDifference = endBlock - startBlock;\n        for (let i = 0; i <= blockDifference; i++) {\n            const blockHash = await this.getHashFromNumber(startBlock + i);\n            const blockEvents = await this.getEventsFromHash(blockHash);\n            const formattedEvents = await this.parseEventData(blockEvents);\n            formattedEvents.forEach((item, index) => {\n                this.props.addRow(item);\n            });\n            const keys = [];\n            Object.keys(formattedEvents[0]).forEach((key) => {\n                switch (key) {\n                    case 'arguments':\n                    case 'key':\n                        return;\n                    default:\n                        keys.push({\n                            title: `${key.toLocaleUpperCase()}`,\n                            dataIndex: `${key}`,\n                            key: `${key}`,\n                        });\n                }\n            });\n            columns = keys;\n        }\n        this.props.setColumns(columns);\n        this.props.setPercentLoaded(100);\n        this.props.setLoaded();\n    }\n    async getBlockData(blockNumber) {\n        const hash = await this.getHashFromNumber(blockNumber);\n        const { block } = await this.getBlockFromHash(hash);\n        const events = await this.getEventsFromHash(hash);\n        const time = await this.getTimeFromHash(hash);\n        return {\n            block,\n            hash,\n            events,\n            time,\n        };\n    }\n    async getBlockFromHash(hash) {\n        const { api } = this.state;\n        if (api.type) {\n            const { rpc } = api;\n            const { chain } = rpc;\n            const blockData = await chain.getBlock(hash);\n            const test = blockData.block.extrincs;\n            return blockData;\n        }\n        return 0;\n    }\n    async getBlockHeaderFromHash(hash) {\n        const { api } = this.state;\n        if (api.type) {\n            const { rpc } = api;\n            const { chain } = rpc;\n            const blockData = await chain.getHeader(hash);\n            return blockData;\n        }\n        return 0;\n    }\n    async getBlockNumberFromHash(hash) {\n        const { api } = this.state;\n        if (api.type) {\n            const { rpc } = api;\n            const { chain } = rpc;\n            const blockData = await chain.getBlock(hash);\n            return parseInt(blockData.block.header.number.toString());\n        }\n        return 0;\n    }\n    async getHashFromNumber(number) {\n        const { api } = this.state;\n        if (api.type) {\n            const { rpc } = api;\n            const { chain } = rpc;\n            const blockHash = await chain.getBlockHash(number);\n            return blockHash;\n        }\n        return 0;\n    }\n    async getEventsFromHash(hash) {\n        const { api } = this.state;\n        if (api.type) {\n            const { query } = api;\n            const { system } = query;\n            const { events } = system;\n            const event = await events.at(hash);\n            return event;\n        }\n        return {};\n    }\n    async parseEventData(events) {\n        const eventData = [];\n        const hash = events.createdAtHash;\n        const blockHeader = await this.getBlockHeaderFromHash(hash);\n        const blockNumber = await this.getBlockNumberFromHash(hash);\n        const blockTime = await this.getTimeFromHash(hash);\n        const eventObject = {\n            blockNumber,\n            events: [],\n        };\n        for (const item of events) {\n            const { data, index, meta, method, section } = item.get('event');\n            const { phase } = item;\n            const [readable] = data.toHuman();\n            const metadata = data.meta;\n            const { args, docs, isEmpty, name, registry, Type } = meta;\n            const [eventId] = phase.asApplyExtrinsic.words;\n            const author = await blockHeader.author;\n            eventObject.events.push({\n                eventId: `${blockNumber}-${eventId}`,\n                event: `${section}.${method}`,\n                extraData: [readable.class, readable.paysFee, readable.weight],\n            });\n        }\n        eventData.push(eventObject);\n        return eventData;\n    }\n    async getTimeFromHash(hash) {\n        let temp;\n        const { api, lastBlock, lastFinalizedBlock } = this.state;\n        if (api.type) {\n            const deriveChain = api.derive.chain;\n            const rpcChain = api.rpc.chain;\n            const { block } = await rpcChain.getBlock(hash);\n            const timestamp = api.query.timestamp;\n            const blockchainTimestamp = await timestamp.now();\n            const [parsedBlockchainTimestamp] = blockchainTimestamp.words;\n            const blockchainTime = new Date(parsedBlockchainTimestamp);\n            const currentTime = new Date();\n            const diff1 = currentTime - parsedBlockchainTimestamp;\n            const diff2 = parsedBlockchainTimestamp - currentTime;\n            const diff3 = currentTime -\n                blockchainTimestamp.words[0] * blockchainTimestamp.words[1];\n            const time1 = new Date(diff1);\n            const time2 = new Date(diff2);\n            const time3 = new Date(diff3);\n            return time1;\n        }\n    }\n    async subscribeToBlocks() {\n        const { api } = this.state;\n        const { derive, rpc } = api;\n        const block = await rpc.chain.getBlock();\n        const header = block.block.header;\n        derive.chain.subscribeNewHeads((header) => {\n            const { subscribe } = this.state;\n            if (subscribe) {\n                console.log(`Block Number#${header.number}\\tBlock Author: ${header.author}`);\n            }\n        });\n    }\n    unsubscribeToBlocks() {\n        this.setState({ subscribe: false });\n    }\n    menu = (<Menu onClick={(event) => {\n        }}>\n      \n      <Menu.Item key=\"1\" onClick={(item) => {\n            this.setState({\n                blockchain: 'Avalanche',\n                endpoint: 'ws://NEED_URL:9650/ext/bc/C/ws',\n            });\n        }} icon={<RocketTwoTone />}>\n        Avalanche\n      </Menu.Item>\n      <Menu.Item key=\"2\" onClick={(item) => {\n            this.setState({\n                blockchain: 'Binance Smart Chain',\n                endpoint: 'wss://bsc-ws-node.nariox.org:443',\n            });\n        }} icon={<BankTwoTone />}>\n        Binance Smart Chain\n      </Menu.Item>\n      <Menu.Item key=\"3\" onClick={(item) => {\n            this.setState({\n                blockchain: 'Ethereum',\n                endpoint: 'wss://mainnet.infura.io/ws',\n            });\n        }} icon={<CompassTwoTone />}>\n        Ethereum\n      </Menu.Item>\n      <Menu.Item key=\"4\" onClick={(item) => {\n            this.setState({\n                blockchain: 'Polygon',\n                endpoint: 'wss://socket.polygon.io/stocks',\n            });\n        }} icon={<SettingTwoTone />}>\n        Polygon\n      </Menu.Item>\n      <Menu.Item key=\"5\" onClick={(item) => {\n            this.setState({\n                blockchain: \"Polkadot\",\n                endpoint: Blockchains.Polkadot,\n            });\n        }} icon={<HeartTwoTone />}>\n        Polkadot\n      </Menu.Item>\n      <Menu.Item key=\"6\" onClick={(item) => {\n            this.setState({\n                blockchain: 'Solana',\n                endpoint: 'wss://api.devnet.solana.com/',\n            });\n        }} icon={<ThunderboltTwoTone />}>\n        Solana\n      </Menu.Item>\n    </Menu>);\n    render() {\n        const { endBlock, endpoint, lastBlock, loading, startBlock } = this.state;\n        const blockchainSelection = \"Polkadot\";\n        const formInitialValues = {\n            endpoint,\n            startBlock,\n            endBlock: endBlock ? endBlock : lastBlock,\n        };\n        const formProps = {\n            name: 'blockchainData',\n            ref: this.inputForm,\n            initialValues: formInitialValues,\n            colon: false,\n            scrollToFirstError: true,\n            labelCol: { span: 8 },\n            wrapperCol: { span: 16 },\n        };\n        const rowProps = {\n            wrap: true,\n        };\n        const columnProps = { xs: 24, sm: 12 };\n        return (<Form className=\"blockchain_form\" {...formProps}>\n        <Divider orientation=\"left\">Blockchain Info</Divider>\n        \n        <Row align=\"middle\" justify=\"center\" {...rowProps}>\n          <Col {...columnProps} xs={7} sm={6} md={5}>\n            <Dropdown overlay={this.menu}>\n              <Button>\n                {blockchainSelection} <CaretDownOutlined />\n              </Button>\n            </Dropdown>\n          </Col>\n          <Col {...columnProps} xs={17} sm={18} md={19}>\n            <Form.Item label=\"Endpoint\" name=\"endpoint\" tooltip={'Blockchain Endpoint URL'} rules={[\n                {\n                    required: true,\n                    message: 'Please input the endpoint you would lke to request blockchain data from.',\n                },\n            ]} required={true}>\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Blocks</Divider>\n        <Row align=\"middle\" justify=\"center\" {...rowProps}>\n          <Col {...columnProps} xs={11} sm={24}>\n            <Form.Item label=\"Start Block\" name=\"startBlock\" tooltip={'Beginning block range'} hasFeedback={true} labelAlign=\"left\" preserve={true} rules={[\n                {\n                    required: true,\n                    message: `Start Block is a required field.`,\n                },\n                {\n                    type: 'number',\n                    min: 1,\n                    max: Number.MAX_SAFE_INTEGER,\n                    message: 'Value must be greater than 0 and less than 9,007,199,254,740,991. (Maximum integer value)',\n                },\n                ({ getFieldsValue, }) => ({\n                    validator(rule, value) {\n                        const { startBlock, endBlock } = getFieldsValue();\n                        if (startBlock < endBlock) {\n                            return Promise.resolve();\n                        }\n                        return Promise.reject(new Error('Start Block must be less than End Block.'));\n                    },\n                }),\n            ]} trigger=\"onChange\" required={true}>\n              <InputNumber min={1} max={Number.MAX_SAFE_INTEGER} style={{ width: '100%' }}/>\n            </Form.Item>\n          </Col>\n          <Col {...columnProps} xs={{ offset: 2, span: 11 }} sm={{ offset: 0, span: 24 }}>\n            <Form.Item label=\"End Block\" labelAlign=\"left\" name=\"endBlock\" tooltip={'Ending block range'} hasFeedback={true} preserve={true} validateFirst={true} rules={[\n                {\n                    type: 'number',\n                    min: 1,\n                    max: Number.MAX_SAFE_INTEGER,\n                    message: 'Value must be greater than 0 and less than 9,007,199,254,740,991. (Maximum integer value)',\n                },\n                {\n                    required: true,\n                    message: `End Block is a required field.`,\n                },\n                ({ getFieldsValue, }) => ({\n                    validator(rule, value) {\n                        const { startBlock, endBlock } = getFieldsValue();\n                        if (endBlock > startBlock) {\n                            return Promise.resolve();\n                        }\n                        return Promise.reject(new Error('End Block must be greater than Start Block.'));\n                    },\n                }),\n            ]} trigger=\"onChange\" required={true}>\n              <InputNumber min={1} max={Number.MAX_SAFE_INTEGER} style={{ width: '100%' }}/>\n            </Form.Item>\n          </Col>\n        </Row>\n        <Divider orientation=\"left\">Actions</Divider>\n        <Row align=\"middle\" {...rowProps}>\n          <Col {...columnProps} xs={{ offset: 5, span: 14 }} sm={{ offset: 0, span: 10 }} md={8}>\n            <Button className=\"scan_button\" type=\"primary\" htmlType=\"submit\" onClick={this.clickListener} block={true} disabled={loading}>\n              Scan\n            </Button>\n          </Col>\n        </Row>\n      </Form>);\n    }\n}\nconst mapStateToProps = (state) => {\n    const { apiReducers, loadingReducers, polkadotReducers } = state;\n    const { api, blockchain, endpoint } = apiReducers;\n    const { loading, percentLoaded } = loadingReducers;\n    const { block } = polkadotReducers;\n    return {\n        api,\n        blockchain,\n        endBlock: block.endBlock,\n        endpoint,\n        genesisBlock: block.genesisBlock,\n        lastBlock: block.lastBlock,\n        lastFinalizedBlock: block.lastFinalizedBlock,\n        loading,\n        percentLoaded,\n        startBlock: block.startBlock,\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addColumns: (data) => {\n            dispatch(addColumns(data));\n        },\n        addRow: (data) => {\n            dispatch(addRow(data));\n        },\n        addRows: (data) => {\n            dispatch(addRows(data));\n        },\n        clearTable: () => {\n            dispatch(clearTable());\n        },\n        setColumns: (data) => {\n            dispatch(setColumns(data));\n        },\n        setLoaded: () => {\n            dispatch(setLoaded());\n        },\n        setLoading: () => {\n            dispatch(setLoading());\n        },\n        setPercentLoaded: (data) => {\n            dispatch(setPercentLoaded(data));\n        },\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DataInput);\n//# sourceMappingURL=Form.jsx.map","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Layout, Progress, Typography } from 'antd';\nconst { Paragraph } = Typography;\nclass Loader extends Component {\n    constructor(props) {\n        super(props);\n    }\n    static getDerivedStateFromProps(props) {\n        const { percentLoaded } = props;\n        return { percentLoaded };\n    }\n    render() {\n        const { percentLoaded } = this.state;\n        return (<Layout>\n        <Paragraph className=\"loading_text\">Loading...</Paragraph>\n        <Progress percent={percentLoaded} status={true ? 'active' : 'normal'}/>\n      </Layout>);\n    }\n}\nconst mapStateToProps = (state) => {\n    const { percentLoaded } = state;\n    return { percentLoaded };\n};\nexport default connect(mapStateToProps)(Loader);\n//# sourceMappingURL=Loader.jsx.map","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Table } from 'antd';\nimport { AppstoreFilled, PlusSquareFilled } from '@ant-design/icons';\nimport { loadingActions } from '../state/actions';\nconst { setLoaded, setLoading, setPercentLoaded } = loadingActions;\nclass DataDisplay extends Component {\n    constructor(props) {\n        super(props);\n        this.populateTable = this.populateTable.bind(this);\n        this.populateEventFilter = this.populateEventFilter.bind(this);\n    }\n    static getDerivedStateFromProps(props) {\n        const { api, loading, percentLoaded, columns, rows } = props;\n        return {\n            api,\n            columns: columns.columns,\n            loading,\n            percentLoaded,\n            rows: rows.rows,\n        };\n    }\n    componentDidMount() {\n        this.props.setPercentLoaded(100);\n        this.props.setLoaded();\n    }\n    populateEventFilter = (items) => {\n        items.map((item) => {\n            if (item.key == 'event') {\n                item.filters = [\n                    {\n                        text: `system.ExtrinsicSuccess`,\n                        value: 'system.ExtrinsicSuccess',\n                    },\n                ];\n                item.onFilter = (value, record) => {\n                    const filterCondition = record.event == value;\n                    return filterCondition;\n                };\n            }\n            return item;\n        });\n        return items;\n    };\n    populateTable() {\n        const { loading, percentLoaded, rows } = this.state;\n        const mainColumns = [\n            {\n                title: 'BLOCK NUMBER',\n                dataIndex: 'blockNumber',\n                key: 'blockNumber',\n                sorter: (a, b) => {\n                    return a.blockNumber - b.blockNumber;\n                },\n            },\n        ];\n        const secondaryColumns = this.populateEventFilter([\n            {\n                title: 'EVENT ID',\n                dataIndex: 'eventId',\n                key: 'eventId',\n            },\n            {\n                title: 'EVENT',\n                dataIndex: 'event',\n                key: 'event',\n            },\n            {\n                title: 'EXTRA DATA',\n                dataIndex: 'extraData',\n                key: 'extraData',\n                render: (text, record, index) => {\n                    const data = record.extraData.map((item) => {\n                        return <li>{item}</li>;\n                    });\n                    return <ul>{data}</ul>;\n                },\n            },\n        ]);\n        return (<Table className=\"blockchain_table\" columns={mainColumns} dataSource={rows} expandable={{\n                childrenColumnName: 'children',\n                expandedRowRender: (record, index) => {\n                    return (<Table key={index} columns={secondaryColumns} dataSource={record.events} pagination={false}/>);\n                },\n                expandIcon: ({ expanded, onExpand, record }) => {\n                    if (expanded) {\n                        return <AppstoreFilled onClick={(e) => onExpand(record, e)}/>;\n                    }\n                    return <PlusSquareFilled onClick={(e) => onExpand(record, e)}/>;\n                },\n                expandRowByClick: true,\n                rowExpandable: (record) => {\n                    if (record.events) {\n                        return true;\n                    }\n                    return false;\n                },\n            }} loading={{ spinning: loading }}/>);\n    }\n    render() {\n        const Table = this.populateTable();\n        return Table;\n    }\n}\nconst mapStateToProps = (state) => {\n    const { apiReducers, loadingReducers, tableReducers, polkadotReducers } = state;\n    return {\n        api: apiReducers.api,\n        columns: tableReducers.columns,\n        loading: loadingReducers.loading,\n        loadingPercent: loadingReducers.loadingPercent,\n        rows: tableReducers.rows,\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setLoaded: () => {\n            dispatch(setLoaded());\n        },\n        setLoading: () => {\n            dispatch(setLoading());\n        },\n        setPercentLoaded: (data) => {\n            dispatch(setPercentLoaded(data));\n        },\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DataDisplay);\n//# sourceMappingURL=Table.jsx.map","import { Layout, Typography } from 'antd';\nconst { Text } = Typography;\nconst AppFooter = (props) => {\n    const { className } = props;\n    const { Footer } = Layout;\n    const year = new Date().getFullYear();\n    return (<Footer className={className}>\n      <Text>Decentralized Application ©{year} Created by Kevin Loy</Text>\n    </Footer>);\n};\nAppFooter.defaultProps = {\n    className: 'site_footer',\n};\nexport default AppFooter;\n//# sourceMappingURL=Footer.jsx.map","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { apiActions, loadingActions } from './state/actions';\nimport { Layout } from 'antd';\nimport './styles/App.css';\nimport AppHeader from './components/Header.jsx';\nimport Loader from './components/Loader.jsx';\nimport DataInput from './components/Form.jsx';\nimport DataDisplay from './components/Table.jsx';\nimport AppFooter from './components/Footer.jsx';\nconst { setApi } = apiActions;\nconst { setLoaded, setPercentLoaded } = loadingActions;\nconst { Content } = Layout;\n;\n;\nclass App extends Component {\n    constructor(props) {\n        super(props);\n    }\n    static getDerivedStateFromProps(props) {\n        const { api, blockchain, endpoint, loading, percentLoaded, currency } = props;\n        return {\n            api,\n            blockchain,\n            endpoint,\n            loading,\n            percentLoaded,\n            currency,\n        };\n    }\n    componentDidMount() {\n        this.props.setApi(this.state.endpoint);\n        this.props.setPercentLoaded(50);\n    }\n    render() {\n        const percentLoaded = 100;\n        const siteLayout = { minHeight: '100vh' };\n        return (<Layout className=\"site_layout\" style={siteLayout}>\n        <AppHeader />\n        <Content>\n          {percentLoaded < 50 ? (<Loader />) : (<>\n              <DataInput />\n              <DataDisplay />\n            </>)}\n        </Content>\n        <AppFooter />\n      </Layout>);\n    }\n}\nconst mapStateToProps = (state) => {\n    const { apiReducers, loadingReducers, polkadotReducers } = state;\n    const { api, blockchain, endpoint } = apiReducers;\n    const { loading, percentLoaded } = loadingReducers;\n    const { currency } = polkadotReducers;\n    return {\n        api,\n        blockchain,\n        endpoint,\n        loading,\n        percentLoaded,\n        currency,\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setApi: (data) => {\n            dispatch(setApi(data));\n        },\n        setLoaded: () => {\n            dispatch(setLoaded());\n        },\n        setPercentLoaded: (data) => {\n            dispatch(setPercentLoaded(data));\n        },\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n//# sourceMappingURL=App.jsx.map","const isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n        registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            if (installingWorker == null) {\n                return;\n            }\n            installingWorker.onstatechange = () => {\n                if (installingWorker.state === 'installed') {\n                    if (navigator.serviceWorker.controller) {\n                        console.log('New content is available and will be used when all ' +\n                            'tabs for this page are closed. See http://bit.ly/CRA-PWA.');\n                        if (config && config.onUpdate) {\n                            config.onUpdate(registration);\n                        }\n                    }\n                    else {\n                        console.log('Content is cached for offline use.');\n                        if (config && config.onSuccess) {\n                            config.onSuccess(registration);\n                        }\n                    }\n                }\n            };\n        };\n    })\n        .catch((error) => {\n        console.error('Error during service worker registration:', error);\n    });\n}\nfunction checkValidServiceWorker(swUrl, config) {\n    fetch(swUrl)\n        .then((response) => {\n        const contentType = response.headers.get('content-type');\n        if (response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)) {\n            navigator.serviceWorker.ready.then((registration) => {\n                registration.unregister().then(() => {\n                    window.location.reload();\n                });\n            });\n        }\n        else {\n            registerValidSW(swUrl, config);\n        }\n    })\n        .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n    });\n}\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            return;\n        }\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            if (isLocalhost) {\n                checkValidServiceWorker(swUrl, config);\n                navigator.serviceWorker.ready.then(() => {\n                    console.log('This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA');\n                });\n            }\n            else {\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n//# sourceMappingURL=serviceWorker.js.map","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './state/store';\nimport 'antd/dist/antd.css';\nimport './styles/App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<React.StrictMode>\n    <Provider store={store}>\n      \n      <App />\n    </Provider>\n  </React.StrictMode>, document.getElementById('root'));\nserviceWorker.unregister();\n//# sourceMappingURL=index.jsx.map"],"sourceRoot":""}